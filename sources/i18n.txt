Internationalization
====================

.. _insanities-i18n:

.. toctree::
   :maxdepth: 2

* :ref:`Description <insanities-i18n>`
* :ref:`Marking strings to be translated <insanities-N_-M_>`
* :ref:`I18n support handlers <insanities-i18n_support>`
* :ref:`set_lang handler <insanities-set_lang>`
* :ref:`Gettext commands <insanities-gettext_commands>`
* :ref:`Integration with forms <insanities-forms-i18n`
* :ref:`Defining own i18n handlers <insanities-own-i18n>`

Description
-----------

.. automodule:: insanities.utils.i18n


.. _insanities-N_-M_:

Marking strings as safe
^^^^^^^^^^^^^^^^^^^^^^^
.. autofunction:: insanities.utils.N_

.. autoclass:: insanities.utils.M_(single, plural)


.. _insanities-i18n_support:

Internationalization support request handlers
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
.. autoclass:: insanities.utils.i18n.BaseI18nSupport_
    :members:

.. autoclass:: insanities.utils.i18n.gettext_support
   :members:


.. _insanities-set_lang:

set_lang handler
^^^^^^^^^^^^^^^^
.. autoclass:: insanities.utils.i18n.set_lang
   :members:


.. _insanities-gettext_commands:

Gettext commands
^^^^^^^^^^^^^^^^
.. autoclass:: insanities.utils.i18n.gettext_commands
   :members:


.. _insanities-forms-i18n:

Integration with forms
^^^^^^^^^^^^^^^^^^^^^^

The internationalization module is integrated with forms using :class:`FormEnvironment <insanities.forms.form.BaseFormEnvironment` class's :meth:`gettext<insanities.forms.form.BaseFormEnvironment.gettext>` and :meth:`ngettext<insanities.forms.form.BaseFormEnvironment.ngettext>` methods. These methods can be redefined in subclasses to customize initialization.

By default, internationalization is used by :class:`Converter <insanities.forms.convs.Converter>` :meth:`error <insanities.forms.convs.Converter.error>` method. This method accepts name of the error, looks up it's message in converters' error_%(name)s attribute and translates the message.


